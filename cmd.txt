#################
# creer l'image #
#################
# docker build -t mon_image .

#######################
# lancer le container #
#######################
# docker run -it -p 80:80 -p 443:443 mon_image

###############################
# supprimer toutes les images #
###############################
# docker rmi -f $(docker images -a -q)

#################################
# supprimer tous les containers #
#################################
# docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)

#########################
# entrer dans container #
#########################
# docker exec -it id_container bash

#################################################
# verifiier ler erreur ngninx dans le conatiner #
#################################################
# cat /var/log/nginx/error.log

#################################################
# check les erreur du lancment du container     #
################################################# 
# docker logs --tail=50 --follow --timestamps id_container

mysql -u root << EOF
ALTER USER 'root'@'localhost' IDENTIFIED BY 'test';
CREATE DATABASE  IF NOT EXISTS wordpress;
CREATE USER  IF NOT EXISTS 'idouidi'@'localhost' IDENTIFIED by 'idouidi';
GRANT ALL PRIVILEGES ON wordpress . * TO 'idouidi'@'localhost';
FLUSH PRIVILEGES;
EOF